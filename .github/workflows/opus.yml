name: Opus Worker CI

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { arch: x64, sys: MINGW64, prefix: mingw64, carch: x86_64 }
          - { arch: x86, sys: MINGW32, prefix: mingw32, carch: i686 }

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: xiph/opus
          submodules: 'true'

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}

      -  name: Install deps
         run: msys2 -c 'pacman -S --noconfirm --needed autoconf automake libtool pkgconf mingw-w64-${{ matrix.carch }}-gcc mingw-w64-${{ matrix.carch }}-pkg-config cmake make mingw-w64-${{ matrix.carch }}-libogg tree'
        
      - run: ls

      - name: Autogen configure file
        run: |
          set MSYSTEM=${{ matrix.sys }}
          msys2 -c './autogen.sh'
      
      - run: ls

      - name: Build Binary
        run: |
          set MSYSTEM=${{ matrix.sys }}
          msys2 -c 'mkdir bin && ./configure --host=${{ matrix.carch }}-w64-mingw32 --prefix=/${{ matrix.prefix }} --disable-static --enable-shared && make'

      - name: Copy Binaries 
        run: cp ./.libs/libopus-0.dll ./bin/opus-win32-${{ matrix.arch }}.dll
        
      - run: tree .

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opus-${{ matrix.sys }}-${{ matrix.carch }}
          path: bin/

  build-linux:
   runs-on: ubuntu-latest
   strategy:
    matrix:
     include:
        - { arch: x86_64, host: "", cc: gcc, cxx: g++, pkgs: ""}
        - { arch: arm64, host: aarch64-linux-gnu, cc: aarch64-linux-gnu-gcc, cxx: aarch64-linux-gnu-g++, pkgs: "gcc-aarch64-linux-gnu g++-aarch64-linux-gnu"}

   steps:
      - uses: actions/checkout@v4
        with: 
          repository: 'xiph/opus'
          submodules: 'true'

      - name: Install dependencies
        run: |
         sudo apt-get update
         sudo apt-get install -y autoconf automake libtool pkg-config make gcc g++ libogg-dev tree

         # Install arch specific additional Pkgs if needed 
         if [ -n "${{ matrix.pkgs }}" ]; then
         echo "ðŸ“¦ Found ${{ matrix.pkgs }} pkgs to install for arch: ${{ matrix.arch}} ! Installing them...."
         sudo apt-get install -y ${{ matrix.pkgs }}
         fi

      - name: Build Opus from source (Linux ${{ matrix.arch }})
        run: |
         ./autogen.sh
         CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} \
         ./configure --host=${{ matrix.host }} --prefix=${{ github.workspace }}/output/${{ matrix.arch }} --enable-shared --disable-static
         make -j$(nproc)
         ls
         tree .libs 

         # Create staging/temp output directory
         mkdir -p ${{ github.workspace }}/output/${{ matrix.arch }}

         cp -r .libs/* ${{ github.workspace }}/output/${{ matrix.arch }}

      - name: Upload Opus Binaries (Linux ${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: opus-linux-${{ matrix.arch }}
          path: ${{ github.workspace }}/output/${{ matrix.arch }}
